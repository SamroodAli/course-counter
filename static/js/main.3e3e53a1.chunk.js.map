{"version":3,"sources":["Counter.jsx","Counters.jsx","App.jsx","index.js"],"names":["label","removeCounter","id","count","setCount","style","fontSize","color","Button","onClick","Number","TextField","value","onChange","e","target","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","palette","text","secondary","Counters","counters","setCounters","onDragEnd","result","destination","items","Array","from","splice","source","index","reorderedItem","droppableId","provided","Stack","className","droppableProps","ref","innerRef","map","draggableId","draggableProps","dragHandleProps","Counter","placeholder","initialState","JSON","parse","localStorage","getItem","err","isArray","useState","setLabel","start","setStart","stop","setStop","useEffect","setItem","stringify","addCounter","console","log","newId","onSubmit","preventDefault","size","Divider","filter","counter","newCount","rootElement","document","getElementById","ReactDOM","render","App"],"mappings":"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","file":"static/js/main.3e3e53a1.chunk.js","sourcesContent":["import AddIcon from \"@mui/icons-material/Add\";\nimport RemoveIcon from \"@mui/icons-material/Remove\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport { Button } from \"@mui/material\";\nimport TextField from \"@mui/material/TextField\";\n\nexport default function ({ label = \"\", removeCounter, id, count, setCount }) {\n  return (\n    <div>\n      <p style={{ fontSize: \"2rem\", color: \"black\" }}>{label}</p>\n      <Button\n        color={\"success\"}\n        aria-label=\"add\"\n        onClick={() => setCount(Number(count) + 1, id)}\n      >\n        <AddIcon />\n      </Button>\n\n      <TextField value={count} onChange={(e) => setCount(e.target.value, id)} />\n      <Button\n        color={\"info\"}\n        aria-label=\"add\"\n        onClick={() => setCount(count - 1, id)}\n      >\n        <RemoveIcon />\n      </Button>\n\n      <Button\n        color={\"error\"}\n        aria-label=\"add\"\n        onClick={() => removeCounter(id)}\n      >\n        <ClearIcon />\n      </Button>\n    </div>\n  );\n}\n","import Counter from \"./Counter\";\nimport Paper from \"@mui/material/Paper\";\nimport Stack from \"@mui/material/Stack\";\nimport { styled } from \"@mui/material/styles\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary\n}));\n\nexport default function Counters({\n  counters,\n  removeCounter,\n  setCounters,\n  setCount\n}) {\n  const handleOnDragEnd = (result) => {\n    if (!result.destination) return;\n\n    const items = Array.from(counters);\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n\n    setCounters(items);\n  };\n\n  return (\n    <DragDropContext onDragEnd={handleOnDragEnd}>\n      <Droppable droppableId=\"counters\">\n        {(provided) => {\n          return (\n            <Stack\n              spacing={2}\n              className=\"counters\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {counters.map(({ id, label, count }, index) => (\n                <Draggable key={id} draggableId={id} index={index}>\n                  {(provided) => (\n                    <Item\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                      <Counter\n                        count={count}\n                        label={label}\n                        id={id}\n                        removeCounter={removeCounter}\n                        setCount={setCount}\n                      />\n                    </Item>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </Stack>\n          );\n        }}\n      </Droppable>\n    </DragDropContext>\n    // ;\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport Counters from \"./Counters\";\nimport { v4 as newId } from \"uuid\";\nimport Divider from \"@mui/material/Divider\";\nimport { Button } from \"@mui/material\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport TextField from \"@mui/material/TextField\";\nlet initialState;\ntry {\n  initialState = JSON.parse(localStorage.getItem(\"courses\"));\n} catch (err) {\n  initialState = [];\n}\n\nif (!Array.isArray(initialState)) {\n  initialState = [];\n}\nexport default function () {\n  const [counters, setCounters] = useState(initialState);\n  const [label, setLabel] = useState(\"\");\n  const [start, setStart] = useState(\"\");\n  const [stop, setStop] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"courses\", JSON.stringify(counters));\n  }, [counters]);\n\n  const addCounter = (e) => {\n    if (!(label && start && stop)) {\n      return;\n    }\n    console.log(\"I ran\");\n\n    setCounters((counters) => {\n      return [\n        ...counters,\n        { id: newId(), label, count: Number(stop) + 1 - start }\n      ];\n    });\n    setLabel(\"\");\n    setStart(\"\");\n    setStop(\"\");\n  };\n\n  const setCount = (newCount, id) => {\n    setCounters((counters) => {\n      return counters.map((counter) => {\n        if (counter.id === id) {\n          return { ...counter, count: newCount };\n        }\n        return counter;\n      });\n    });\n  };\n\n  const removeCounter = (id) => {\n    setCounters((counters) => {\n      return counters.filter((counter) => counter.id !== id);\n    });\n  };\n\n  return (\n    <div>\n      <h1>Counter App</h1>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          addCounter();\n        }}\n      >\n        <TextField\n          value={label}\n          id=\"standard-basic\"\n          onChange={(e) => setLabel(e.target.value)}\n          placeholder=\"Enter course name\"\n        />\n        <TextField\n          value={start}\n          id=\"standard-basic\"\n          onChange={(e) => setStart(e.target.value)}\n          placeholder=\"Enter section start\"\n        />\n        <TextField\n          value={stop}\n          id=\"standard-basic\"\n          onChange={(e) => setStop(e.target.value)}\n          placeholder=\"Enter section stop\"\n        />\n        <Button color=\"primary\" aria-label=\"add\" onClick={addCounter}>\n          <AddIcon size=\"large\" />\n        </Button>\n      </form>\n\n      <Divider />\n      <Counters\n        counters={counters}\n        removeCounter={removeCounter}\n        setCounters={setCounters}\n        setCount={setCount}\n      />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}